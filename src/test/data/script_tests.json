[
["Format is: [[wit..., amount]?, scriptSig, scriptPubKey, flags, expected_scripterror, ... comments]"],
["It is evaluated as if there was a crediting coinbase transaction with two 0"],
["pushes as scriptSig, and one output of 0 satoshi and given scriptPubKey,"],
["followed by a spending transaction which spends this output as only input (and"],
["correct prevout hash), using the given scriptSig. All nLockTimes are 0, all"],
["nSequences are max."],

["", "DEPTH 0 EQUAL", "P2SH,STRICTENC", "OK", "Test the test: we should have an empty stack after scriptSig evaluation"],
["  ", "DEPTH 0 EQUAL", "P2SH,STRICTENC", "OK", "and multiple spaces should not change that."],
["   ", "DEPTH 0 EQUAL", "P2SH,STRICTENC", "OK"],
["    ", "DEPTH 0 EQUAL", "P2SH,STRICTENC", "OK"],
["1 2", "2 EQUALVERIFY 1 EQUAL", "P2SH,STRICTENC", "OK", "Similarly whitespace around and between symbols"],
["1  2", "2 EQUALVERIFY 1 EQUAL", "P2SH,STRICTENC", "OK"],
["  1  2", "2 EQUALVERIFY 1 EQUAL", "P2SH,STRICTENC", "OK"],
["1  2  ", "2 EQUALVERIFY 1 EQUAL", "P2SH,STRICTENC", "OK"],
["  1  2  ", "2 EQUALVERIFY 1 EQUAL", "P2SH,STRICTENC", "OK"],


["TEST DISABLED OP CODES (CVE-2010-5137)"],
["'abc' 1 1", "SUBSTR", "P2SH,STRICTENC", "DISABLED_OPCODE", "SUBSTR disabled"],
["'abc' 1 1 0", "IF SUBSTR ELSE 1 ENDIF", "P2SH,STRICTENC", "DISABLED_OPCODE", "SUBSTR disabled"],
["'abc' 2 0", "IF LEFT ELSE 1 ENDIF", "P2SH,STRICTENC", "DISABLED_OPCODE", "LEFT disabled"],
["'abc' 2 0", "IF RIGHT ELSE 1 ENDIF", "P2SH,STRICTENC", "DISABLED_OPCODE", "RIGHT disabled"],
["'abc'", "IF INVERT ELSE 1 ENDIF", "P2SH,STRICTENC", "DISABLED_OPCODE", "INVERT disabled"],
["1 2 0 IF AND ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "AND disabled"],
["1 2 0 IF OR ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "OR disabled"],
["1 2 0 IF XOR ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "XOR disabled"],
["2 0 IF 2MUL ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "2MUL disabled"],
["2 0 IF 2DIV ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "2DIV disabled"],
["2 2 0 IF MUL ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "MUL disabled"],
["2 2 0 IF DIV ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "DIV disabled"],
["2 2 0 IF MOD ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "MOD disabled"],
["2 2 0 IF LSHIFT ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "LSHIFT disabled"],
["2 2 0 IF RSHIFT ELSE 1 ENDIF", "NOP", "P2SH,STRICTENC", "DISABLED_OPCODE", "RSHIFT disabled"],


["[witness stack..., amount], scriptSig, scriptPubKey, flags, expected_scripterror, ... comments]"],
["scriptSig, scriptPubKey, flags, expected_scripterror, ... comments]"],

["1 2", "CAT", "P2SH,STRICTENC", "DISABLED_OPCODE"],
["1 2", "CAT", "P2SH,WITNESS", "DISABLED_OPCODE"],
["1 2", "CAT CAT", "P2SH,WITNESS", "DISABLED_OPCODE"],
["1 2 3 4", "CAT CAT", "P2SH,WITNESS", "DISABLED_OPCODE"],

["'A' 'B'", "CAT 'AB' EQUAL", "P2SH,WITNESS", "DISABLED_OPCODE"],
["'A' 'B'", "CAT 'BA' EQUAL", "P2SH,WITNESS", "DISABLED_OPCODE"],
["'A' 'B' 'C' 'D'", "CAT CAT CAT 'ABCD' EQUAL", "P2SH,WITNESS", "DISABLED_OPCODE"],

["1 2 3 4", "CAT CAT CAT DEPTH 1 EQUAL ", "P2SH,WITNESS", "DISABLED_OPCODE"],
["1 2 3 4", "CAT CAT CAT DEPTH 2 EQUAL ", "P2SH,WITNESS", "DISABLED_OPCODE"],


[
    [
        "7e7e76754c06eeffeeffaabbcc87",
        "eeffeeff",
        "aa",
        "bbcc",
        "7e7e76754c06eeffeeffaabbcc87",
        "c1d6889cb081036e0faefa3a35157ad71086b123b2b144b649798b494c300a961d",       
        0.00000001
    ],
    "",
    "0x51 0x20 0x1a671656333e4d55ac202f478bcf50ca883670817849fbdc67b0560dfbd5d8e4",
    "P2SH,WITNESS,TAPROOT",
    "OK",
    "OP_CAT twice on different sized elements"
],
[
    [
        "aa", "bb",
        "7e4c02aabb87",
        "c0d6889cb081036e0faefa3a35157ad71086b123b2b144b649798b494c300a961d",       
        0.00000001
    ],
    "",
    "0x51 0x20 0x15048ed3a65748549c27b671936987093cf73a4c9cb18522a74fb9553060ca99",
    "P2SH,WITNESS,TAPROOT",
    "OK",
    "Very simple OP_CAT"
],


[
    [
        "aa", "bb", "cc", "dd", "ee", "ff",
        "7e7e7e7e7e4c06aabbccddeeff87",
        "c1d6889cb081036e0faefa3a35157ad71086b123b2b144b649798b494c300a961d",       
        0.00000001
    ],
    "",
    "0x51 0x20 0xad6aa421f3079ec5eabfbff4a998f1030c14aea821c1fc26408a17223dd8d021",
    "P2SH,WITNESS,TAPROOT",
    "OK",
    "OP_CAT repeated five times"
],
[
    [
        "aa", "bb", "cc", "dd", "ee",
        "7e7e7e7e7e4c06aabbccddeeff87", // CAT CAT CAT CAT CAT PUSH1 5 0xaabbccddee EQUAL
        "c1d6889cb081036e0faefa3a35157ad71086b123b2b144b649798b494c300a961d",       
        0.00000001
    ],
    "",
    "0x51 0x20 0xad6aa421f3079ec5eabfbff4a998f1030c14aea821c1fc26408a17223dd8d021",
    "P2SH,WITNESS,TAPROOT",
    "INVALID_STACK_OPERATION",
    "OP_CAT repeated five times but not enough elements on the stack"
],


["", "EQUAL NOT", "P2SH,STRICTENC", "INVALID_STACK_OPERATION", "EQUAL must error when there are no stack items"],
["0", "EQUAL NOT", "P2SH,STRICTENC", "INVALID_STACK_OPERATION", "EQUAL must error when there are not 2 stack items"],
["0 1","EQUAL", "P2SH,STRICTENC", "EVAL_FALSE"],
["1 1 ADD", "0 EQUAL", "P2SH,STRICTENC", "EVAL_FALSE"],
["11 1 ADD 12 SUB", "11 EQUAL", "P2SH,STRICTENC", "EVAL_FALSE"]

]